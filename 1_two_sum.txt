
class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            int diff = target - nums[i];
            if (map.get(diff) != null) {
                return new int[]{i, map.get(diff)};
            }
            map.put(nums[i], i);
        }
        return new int[]{};
    }
}


/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(nums, target) {
    var myObject = {};
    for(var i = 0; i < nums.length; i++) {
        const complement = target - nums[i]
        if (myObject.hasOwnProperty(complement)) {
            return [myObject[complement],i]
        }
        myObject[nums[i]] = i
    }
};